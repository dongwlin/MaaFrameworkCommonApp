name: build cli

on:
  push:
    tags:
      - 'v*'
    branches:
      - '**'
    paths:
      - '.github/workflows/ci.yml'
      - 'source/cli/**'
      - 'assets/**'
      - 'cmake/**'
      - 'CMakelists.txt'
      - 'CMakePresets.json'
  pull_request:
    branches:
      - '**'
    paths:
      - '.github/workflows/ci.yml'
      - 'source/cli/**'
      - 'assets/**'
      - 'cmake/**'
      - 'CMakelists.txt'
      - 'CMakePresets.json'
  schedule:
    - cron: '30 18 * * *'
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Update resource version
        run: |
          python3 .github/update_resource_version.py assets/resource/properties.json ${{ github.run_number }}

      - name: Download MaaFramework
        id: download_maa_framework
        uses: robinraju/release-downloader@v1.8
        with:
          repository: MaaAssistantArknights/MaaFramework
          latest: true
          fileName: "MAA-win-${{ matrix.arch }}*"
          out-file-path: "deps"
          extract: true

      - name: Build MFCA
        run: |
          cmake --preset "${{ matrix.arch == 'x86_64' && 'MSVC 2022' || 'MSVC 2022 ARM' }}" -DMFCA_HASH_VERSION='${{ github.run_number }}'

          cmake --build build --config Release -j 16

      - name: Install
        shell: bash
        run: |
          cmake --install build --prefix install

      - uses: actions/upload-artifact@v3
        with:
          name: MFCA-win-${{ matrix.arch }}
          path: "install"
    outputs:
      maa_framework_tag: ${{ steps.download_maa_framework.outputs.tag_name}}

  ubuntu:
    runs-on: ubuntu-latest
    container: archlinux:base-devel
    strategy:
      matrix:
        arch: [aarch64, x86_64]
      fail-fast: false

    steps:
      # maybe should explicitly update some pkg instead of all?
      - name: Update system
        run: |
          pacman -Syu --noconfirm

      - name: Install dep
        run: |
          pacman -Sy
          pacman -S --noconfirm cmake python ccache ninja git

      # https://github.com/MaaAssistantArknights/MaaFramework/actions/runs/5643408179/job/15285186255
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install cross compile toolchains
        if: ${{ matrix.arch != 'x86_64' }}
        run: |
          pacman -Sy
          pacman -S --noconfirm aarch64-linux-gnu-gcc

      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          remove_stale_cache: false

      - name: Update resource version
        run: |
          python3 .github/update_resource_version.py assets/resource/properties.json ${{ github.run_number }}

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1.8
        with:
          repository: MaaAssistantArknights/MaaFramework
          latest: true
          fileName: "MAA-linux-${{ matrix.arch }}*"
          out-file-path: "deps"
          extract: true

      - name: Build MFCA
        env:
          CC: ${{ matrix.arch == 'x86_64' && 'ccache gcc' || 'ccache aarch64-linux-gnu-gcc' }}
          CXX: ${{ matrix.arch == 'x86_64' && 'ccache g++' || 'ccache aarch64-linux-gnu-g++' }}
        run: |
          cmake --preset 'NinjaMulti' \
            -DMFCA_HASH_VERSION='${{ github.run_number }}'

          cmake --build build --config Release -j 16

      - name: Install
        shell: bash
        run: |
          cmake --install build --prefix install

      - uses: actions/upload-artifact@v3
        with:
          name: MFCA-linux-${{ matrix.arch }}
          path: "install"

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [aarch64, x86_64]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dep
        run: |
          brew install cmake python ninja
        # ccache?

      - name: Install compiler
        run: |
          brew install llvm
        # 16

      - name: Update resource version
        run: |
          python3 .github/update_resource_version.py assets/resource/properties.json ${{ github.run_number }}

      - name: Download MaaFramework
        uses: robinraju/release-downloader@v1.8
        with:
          repository: MaaAssistantArknights/MaaFramework
          latest: true
          fileName: "MAA-macos-${{ matrix.arch }}*"
          out-file-path: "deps"
          extract: true

      - name: Build MFCA
        env:
          CC: "/usr/local/opt/llvm/bin/clang"
          CXX: "/usr/local/opt/llvm/bin/clang++"
        run: |
          cmake --preset 'NinjaMulti' \
            -DARCH='${{ matrix.arch == 'x86_64' && 'x64' || 'arm64' }}' \
            -DMFCA_HASH_VERSION='${{ github.run_number }}'

          cmake --build build --config Release -j 16

      - name: Install
        shell: bash
        run: |
          cmake --install build --prefix install

      - uses: actions/upload-artifact@v3
        with:
          name: MFCA-macos-${{ matrix.arch }}
          path: "install"

  release:
    needs: [ windows, ubuntu, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Generation Date
        run: |
          echo "DATE=$(date +'%Y%m.%d%H%M%S')" >> $GITHUB_ENV

      - uses: actions/download-artifact@v3
        with:
          path: assets
      - run: |
          cd assets
          for f in *; do
            (cd $f && zip -r ../$f-${{ github.run_number }}.${{ env.DATE }}-MaaFramework-${{needs.windows.outputs.maa_framework_tag}}.zip .)
          done

      - uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'schedule'}}
        with:
          prerelease: true
          files: assets/*
          tag_name: ${{ github.run_number }}.${{ env.DATE }}
          body: |
            This is an automatic release triggered by the scheduled workflow.
            Release date: ${{ env.DATE }}

      - uses: softprops/action-gh-release@v1
        if: ${{ github.event_name != 'schedule'}}
        with:
          files: assets/*
          tag_name: ${{ github.run_number }}.${{ env.DATE }}
          